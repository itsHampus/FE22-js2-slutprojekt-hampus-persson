{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1052c4c3ba4b225f.js","src/modules/firebase.ts","node_modules/@parcel/runtime-js/lib/runtime-306e42579687c1c4.js","node_modules/@parcel/runtime-js/lib/runtime-9f1ca32467737c92.js","node_modules/@parcel/runtime-js/lib/runtime-01604ad392c0c2bd.js","src/modules/gui.ts","src/modules/homePage.ts","src/modules/profilePage.ts","src/main.ts","src/modules/user.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ReQc\\\":\\\"index.f13b18dd.js\\\",\\\"6BjcK\\\":\\\"animal-leao-lion-svgrepo-com.3298cfa5.svg\\\",\\\"ljGDz\\\":\\\"animal-bull-bulls-svgrepo-com.8bfc578b.svg\\\",\\\"bazO7\\\":\\\"animal-duck-ducks-svgrepo-com.d97cb9d9.svg\\\"}\"));","import { UserType } from \"./user\";\nexport class Firebase{\n    constructor(){}\n    async getAllUsers():Promise<UserType[]>{\n        const url = 'https://slutprojekt-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/.json';\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    }\n    async CreateUser(userObj: any, index: number):Promise<void>{\n        const url = `https://slutprojekt-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/${index}.json`;\n        const init = {\n            method: 'PUT',\n            body: JSON.stringify(userObj),\n            headers:{\n                'Content-type': 'application/json: charset=UTF-8'\n            }\n        }\n        const response = await fetch(url, init);\n    }\n    async updateUserPosts(post: string, timestamp: string, index: number):Promise<void>{\n        const url = `https://slutprojekt-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/${index}/posts.json`;\n        const init = {\n            method: 'POST',\n            body: JSON.stringify({post, timestamp}),\n            headers:{\n                'Content-type': 'application/json: charset=UTF-8'\n            }\n        }\n        const response = await fetch(url, init);\n    }\n    async deleteUserPost(postId: string, index: Number):Promise<void>{\n        const url = `https://slutprojekt-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/${index}/posts/${postId}.json`;\n        const init = {\n            method: 'DELETE',\n            headers:{\n                'Content-type': 'application/json: charset=UTF-8'\n            }\n        }\n        const response = await fetch(url, init);\n    }\n    async deleteUserFromFirebase():Promise<void>{\n        const url = `https://slutprojekt-socialmedia-default-rtdb.europe-west1.firebasedatabase.app/.json`;\n        const init = {\n            method: 'DELETE',\n            headers:{\n                'Content-type': 'application/json: charset=UTF-8'\n            }\n        }\n        const response = await fetch(url, init);\n    }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6BjcK\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ljGDz\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bazO7\")).toString();","export class Gui {\n    // Containers som ska vara synliga beroende på vilken 'sida' man är på\n    private readonly createUserContainer: HTMLElement = document.getElementById('createUserContainer')!;\n    private readonly loginContainer: HTMLElement = document.getElementById('loginContainer')!;\n    private readonly homePageContainer: HTMLElement = document.getElementById('homePageContainer')!;\n    private readonly profilePageContainer: HTMLElement = document.getElementById('profilePageContainer')!;\n    private readonly displayProfilePicture = (<HTMLImageElement>document.getElementById('displayProfilePicture')!);\n    private readonly profilePicture = (<HTMLImageElement>document.getElementById('profilePicture')!);\n    //Text att klicka på för att byta mellan login och skapa användare\n    private readonly switchToCreateUser = document.querySelector('#loginContainer h5')!;\n    private readonly switchToLogin = document.querySelector('#createUserContainer h5')!;\n    constructor() {\n        this.switchToCreateUser!.addEventListener('click', () => {\n            this.createUser();\n        })\n\n        this.switchToLogin!.addEventListener('click', () => {\n            this.createLogin();\n        })\n    }\n    public createLogin() {\n        this.loginContainer.style.display = 'flex';\n        this.createUserContainer.style.display = 'none';\n        this.homePageContainer.style.display = 'none';\n        this.profilePageContainer.style.display = 'none';\n    }\n    public createUser() {\n        this.createUserContainer.style.display = 'flex';\n        this.loginContainer.style.display = 'none';\n        this.homePageContainer.style.display = 'none';\n        this.profilePageContainer.style.display = 'none';\n    }\n    public createHomePage() {\n        this.homePageContainer.style.display = 'flex';\n        this.createUserContainer.style.display = 'none';\n        this.loginContainer.style.display = 'none';\n        this.profilePageContainer.style.display = 'none';\n    }\n    public createProfilePage() {\n        this.profilePageContainer.style.display = 'flex';\n        this.homePageContainer.style.display = 'none';\n        this.createUserContainer.style.display = 'none';\n        this.loginContainer.style.display = 'none';\n    }\n    public userProfilePicture(imgUrl: string, homePageOrProfilePage: boolean) {\n        if (imgUrl == 'animal-leao-lion-svgrepo-com.svg' && homePageOrProfilePage === true) {\n            const profilePictureUrl = new URL('../images/animal-leao-lion-svgrepo-com.svg', import.meta.url);\n            this.displayProfilePicture.src = profilePictureUrl.href;\n        }\n        else if (imgUrl == 'animal-bull-bulls-svgrepo-com.svg' && homePageOrProfilePage === true) {\n            const profilePictureUrl = new URL('../images/animal-bull-bulls-svgrepo-com.svg', import.meta.url);\n            this.displayProfilePicture.src = profilePictureUrl.href;\n        }\n        else if (imgUrl == 'animal-duck-ducks-svgrepo-com.svg' && homePageOrProfilePage === true) {\n            const profilePictureUrl = new URL('../images/animal-duck-ducks-svgrepo-com.svg', import.meta.url);\n            this.displayProfilePicture.src = profilePictureUrl.href;\n        }\n        else if (imgUrl == 'animal-leao-lion-svgrepo-com.svg' && homePageOrProfilePage === false) {\n            const profilePictureUrl = new URL('../images/animal-leao-lion-svgrepo-com.svg', import.meta.url);\n            this.profilePicture.src = profilePictureUrl.href;\n        }\n        else if (imgUrl == 'animal-bull-bulls-svgrepo-com.svg' && homePageOrProfilePage === false) {\n            const profilePictureUrl = new URL('../images/animal-bull-bulls-svgrepo-com.svg', import.meta.url);\n            this.profilePicture.src = profilePictureUrl.href;\n        }\n        else if (imgUrl == 'animal-duck-ducks-svgrepo-com.svg' && homePageOrProfilePage === false) {\n            const profilePictureUrl = new URL('../images/animal-duck-ducks-svgrepo-com.svg', import.meta.url);\n            this.profilePicture.src = profilePictureUrl.href;\n        }\n    }\n    returnPictureUrl(imgUrl: string){\n        if(imgUrl == 'animal-leao-lion-svgrepo-com.svg'){\n            const pictureUrl = new URL('../images/animal-leao-lion-svgrepo-com.svg', import.meta.url);\n            return pictureUrl\n        }\n        else if(imgUrl == 'animal-bull-bulls-svgrepo-com.svg'){\n            const pictureUrl = new URL('../images/animal-bull-bulls-svgrepo-com.svg', import.meta.url);\n            return pictureUrl\n        }\n        else if(imgUrl == 'animal-duck-ducks-svgrepo-com.svg'){\n            const pictureUrl = new URL('../images/animal-duck-ducks-svgrepo-com.svg', import.meta.url);\n            return pictureUrl\n        }\n    }\n}","import { Gui } from \"./gui\";\nimport { Firebase } from \"./firebase\";\nimport { UserType } from \"./user\";\n\nexport type PostType = {\n    username: string,\n    picture: string,\n    p: string,\n    t: string\n}\n\nexport class HomePage {\n    private readonly gui: Gui = new Gui();\n    private readonly firebase: Firebase = new Firebase();\n    constructor() {}\n    async homePage() {\n        this.gui.createHomePage();\n        await this.allUsersPosts();\n        document.getElementById('listOfAllUsers')!.innerHTML = '';\n        //Loopar igenom alla användare\n        (await this.firebase.getAllUsers()).forEach((storedUser) => {\n            //Om det är den inloggade användaren visa deras användarnamn och bild\n            if (storedUser.username === localStorage.getItem('username')) {\n                const username = document.getElementById('displayUsername')!;\n                username.innerText = storedUser.username;\n                this.gui.userProfilePicture(storedUser.profilePicture, true);\n            }\n            //Lägger till dem i listan över användare\n            const userForTheList = document.createElement('li');\n            userForTheList.innerText = storedUser.username;\n            document.getElementById('listOfAllUsers')!.append(userForTheList);\n        })\n        //För att logga ut sin användare\n        const logOutBtn = document.getElementById('logOutBtn')!;\n        logOutBtn.addEventListener('click', () => {\n            localStorage.clear();\n            window.location.href = './index.html';\n        });\n    }\n    async deleteUser(){\n        const deleteAccountBtn = document.getElementById('deleteAccountBtn')!;\n        deleteAccountBtn.addEventListener('click', async () => {\n            let confirmedChoise = confirm('Are you sure you want to delete your account?');\n            if (confirmedChoise) {\n                const arrayOfAllUsers = await this.firebase.getAllUsers();\n                arrayOfAllUsers.forEach(async (storedUser, index: number) => {\n                    if (storedUser.username === localStorage.getItem('username')) {\n                        //Ta bort alla användare från firebase\n                        await this.firebase.deleteUserFromFirebase();\n                        //Ta bort användaren från arrayen\n                        arrayOfAllUsers.splice(index, 1);\n                        //Lägg nu till de resterande användarna till firebase igen\n                        arrayOfAllUsers.forEach(async (storedUser, index: number) => {\n                            await this.firebase.CreateUser(storedUser, index);\n                            localStorage.clear();\n                            window.location.href = './index.html';\n                        })\n                    }\n                })\n            }\n        })\n    }\n    async addPost(){\n        const userStatusUpdateForm = document.getElementById('userStatusUpdateForm')!;\n        userStatusUpdateForm.addEventListener('submit', async (event) => {\n            event.preventDefault();\n            //Texten användaren skrev skickas med till statusUpdate och efter det lagts till i firebase så uppdateras flödet med de nya statusuppdateringarna\n            let statusUpdateText = (<HTMLTextAreaElement>document.getElementById('userStatusUpdate')!).value;\n            await this.statusUpdate(statusUpdateText).then(async () => {await this.allUsersPosts();})\n        })\n    }\n    private async statusUpdate(statusUpdate: string) {\n        const allUsers = await this.firebase.getAllUsers();\n        const currentUser = allUsers.find((storedUser: UserType) => storedUser.username === localStorage.getItem('username'));\n        if (currentUser !== undefined) {\n            const userIndex: number = allUsers.indexOf(currentUser);\n            const timestamp = new Date().toLocaleString();\n            await this.firebase.updateUserPosts(statusUpdate, timestamp, userIndex);\n        }\n        // Texten användaren skrev tas bort\n        (<HTMLTextAreaElement>document.getElementById('userStatusUpdate')!).value = '';\n    }\n    private async allUsersPosts() {\n        const allUsers = await this.firebase.getAllUsers();\n        document.getElementById('everyStatusUpdateContainer')!.innerHTML = \"\";\n        let allPosts: PostType[] = [];\n        allUsers.forEach((storedUser: UserType) => {\n            if (storedUser.posts !== undefined) {\n                const arrayOfPosts = Object.values(storedUser.posts);\n                arrayOfPosts.forEach(({ post, timestamp }) => {\n                    const postWithTimestamp: PostType = {\n                        username: storedUser.username,\n                        picture: storedUser.profilePicture,\n                        p: post,\n                        t: timestamp\n                    }\n                    allPosts.push(postWithTimestamp);\n                })\n            }\n        })\n        allPosts.sort((a, b) => new Date(b.t).getTime() - new Date(a.t).getTime());\n        allPosts.forEach((storedPost: PostType) => {\n            const username = document.createElement('h5');\n            username.innerText = storedPost.username;\n            const profilePicture = document.createElement('img');\n            const pictureSrc = this.gui.returnPictureUrl(storedPost.picture)!; \n            profilePicture.src = pictureSrc?.href;\n            const post = document.createElement('p');\n            post.innerText = storedPost.p;\n            const timestampForThePost = document.createElement('p');\n            timestampForThePost.innerText = storedPost.t;\n            const postContainer = document.createElement('div');\n            postContainer.id = 'postContainer';\n            postContainer.append(username, profilePicture ,post, timestampForThePost);\n            document.getElementById('everyStatusUpdateContainer')!.append(postContainer);\n        })\n    }\n\n}","import { Gui } from \"./gui\";\nimport { PostType } from \"./homePage\";\nimport { Firebase } from \"./firebase\";\nimport { UserType } from \"./user\";\nexport class ProfilePage{\n    private readonly gui: Gui = new Gui();\n    private readonly firebase: Firebase = new Firebase();\n    constructor(){}\n    async profilePage(username: string) {\n        this.gui.createProfilePage();\n    \n        let allPosts: PostType[] = [];\n        let arrayOfPostIDs: string[] = [];\n        let arrayOfIndexesForPosts: number[] = [];\n        const allUsers = await this.firebase.getAllUsers();\n        allUsers.forEach((storedUser: UserType) => {\n            if (storedUser.username === username) {\n                const profileUsername = document.getElementById('profileUsername')!;\n                profileUsername.innerText = storedUser.username;\n                this.gui.userProfilePicture(storedUser.profilePicture, false);\n    \n                if (storedUser.posts !== undefined) {\n                    const arrayOfPosts = Object.values(storedUser.posts)\n                    arrayOfPosts.forEach(({ post, timestamp }, indexForThePost: number) => {\n                        const postWithTimestamp: PostType = {\n                            username: storedUser.username,\n                            picture: storedUser.profilePicture,\n                            p: post,\n                            t: timestamp\n                        }\n    \n                        allPosts.push(postWithTimestamp);\n                        arrayOfIndexesForPosts.push(indexForThePost);\n                    })\n                    Object.keys(storedUser.posts).forEach((key) => {\n                        arrayOfPostIDs.push(key);\n                    });\n                } else {\n                    const noStatusUpdate = document.createElement('p');\n                    noStatusUpdate.innerText = 'No posts yet';\n                    document.getElementById('profileStatusContainer')!.append(noStatusUpdate);\n                }\n            }\n        })\n        allPosts.sort((a, b) => new Date(b.t).getTime() - new Date(a.t).getTime());\n        arrayOfIndexesForPosts.reverse();\n        allPosts.forEach((storedPost: PostType, indexForThePost: number) => {\n            const statusContainer = document.createElement('div');\n            statusContainer.id = 'containerForTheProfilePost';\n            const statusUsername = document.createElement('h5');\n            statusUsername.innerText = storedPost.username;\n            const profilePicture = document.createElement('img');\n            const pictureSrc = this.gui.returnPictureUrl(storedPost.picture)!;\n            profilePicture.src = pictureSrc.href;\n            const statusText = document.createElement('p');\n            statusText.innerText = storedPost.p;\n            const statusTimestamp = document.createElement('p');\n            statusTimestamp.innerText = storedPost.t;\n    \n            if (storedPost.username === localStorage.getItem('username')) {\n                const deletePostBtn = document.createElement('button');\n                deletePostBtn.innerText = 'Delete post';\n                deletePostBtn.value = indexForThePost.toString()\n                deletePostBtn.addEventListener('click', async () => {\n                    let confirmChoise = confirm('Are you sure you want to delete this post?');\n                    if (confirmChoise) {\n                        const allUsers = await this.firebase.getAllUsers();\n                        allUsers.forEach(async (storedUser, userIndex: number) => {\n                            if (storedUser.username === localStorage.getItem('username')) {\n                                const postIndex = arrayOfIndexesForPosts[deletePostBtn.value]\n                                await this.firebase.deleteUserPost(arrayOfPostIDs[postIndex], userIndex);\n                                document.getElementById('profileStatusContainer')!.innerHTML = '';\n                                this.profilePage(localStorage.getItem('username')!);\n                            }\n                        });\n                    }\n                });\n    \n                statusContainer.append(statusUsername, profilePicture,statusText, statusTimestamp, deletePostBtn);\n            } else {\n                statusContainer.append(statusUsername, profilePicture, statusText, statusTimestamp);\n            }\n            document.getElementById('profileStatusContainer')!.append(statusContainer);\n        })\n    }\n}","import { User } from \"./modules/user\";\nimport { Gui } from \"./modules/gui\";\nimport { HomePage } from \"./modules/homePage\";\n\nconst GuiFor = new Gui();\nGuiFor.createLogin();\nconst user = new User();\nconst homePage = new HomePage;\n\n// För att skapa en användare\nconst createUserForm = document.getElementById('createUserForm')!;\ncreateUserForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    user.createUser();\n});\n// För att logga in\nconst loginForm = document.getElementById('loginForm')!;\nloginForm.addEventListener('submit', (event) => {\n    event.preventDefault();\n    user.logIn();\n})\n\n//Tillbaks till Home\nconst backToHomeBtn = document.getElementById('backToHomeBtn')!;\nbackToHomeBtn.addEventListener('click', () => { \n    console.log('Back to Home');\n    user.goToHomeOrProfile(true);\n    document.getElementById('profileStatusContainer')!.innerHTML = '';\n});\n\nhomePage.addPost();\nhomePage.deleteUser();","// import { homePage } from \"../main\";\nimport { Firebase } from \"./firebase\";\nimport { HomePage } from \"./homePage\";\nimport { ProfilePage } from \"./profilePage\";\n\n\nexport type UserType = {\n    username: string,\n    password: string,\n    profilePicture: string,\n    posts?: {\n        id: {\n            post: string,\n            timestamp: string\n        }\n    }\n}\n\nexport class User {\n    private readonly firebase: Firebase = new Firebase();\n    private homePage: HomePage = new HomePage();\n    private profilePage: ProfilePage = new ProfilePage();\n    constructor(\n    ) {\n        if (localStorage.getItem('username') != null) {\n            this.goToHomeOrProfile(true)\n        }\n    }\n    async createUser() {\n        const createUsername: string = (<HTMLInputElement>document.getElementById('createUsername'))!.value;\n        const createPassword: string = (<HTMLInputElement>document.getElementById('createPassword')!).value;\n        const verifyPassword: string = (<HTMLInputElement>document.getElementById('verifyPassword'))!.value;\n        const selectPicture: string = (<HTMLSelectElement>document.getElementById('selectPicture'))!.value;\n        if (createPassword === verifyPassword) {\n            const user: UserType = {\n                username: createUsername,\n                password: createPassword,\n                profilePicture: selectPicture\n            };\n            const firebaseArray = await this.firebase.getAllUsers();\n            if (firebaseArray !== null) {\n                const indexForUser = firebaseArray.length;\n                await this.firebase.CreateUser(user, indexForUser);\n            }\n            else {\n                const indexForUser = 0;\n                await this.firebase.CreateUser(user, indexForUser);\n            }\n            localStorage.setItem('username', user.username);\n            this.goToHomeOrProfile(true)\n        } else {\n            alert('Passwords do not match');\n        }\n    }\n    async logIn() {\n        const username: string = (<HTMLInputElement>document.getElementById('username'))!.value;\n        const password: string = (<HTMLInputElement>document.getElementById('password'))!.value;\n\n        const allUsers: UserType[] = await this.firebase.getAllUsers();\n        let checkUser: boolean = this.checkIfUserExists(username, password, allUsers);\n        if (checkUser == false) {\n            alert(\"User not found\");\n        }\n    }\n    private checkIfUserExists(username: string, password: string, allUsers: UserType[]): boolean {\n        let checkUser = false;\n        allUsers.forEach(storedUser => {\n            if (storedUser.username === username) {\n                checkUser = true;\n                if (storedUser.password === password) {\n                    localStorage.setItem('username', storedUser.username)\n                    checkUser = true;\n                    this.goToHomeOrProfile(true)\n                }\n                else {\n                    alert(\"Wrong password\");\n                }\n            }\n        })\n        return checkUser;\n    }\n    goToHomeOrProfile(trueOrFalse: boolean, username?: string): void {\n        if (trueOrFalse == true) {\n            this.homePage.homePage().then(() => {\n                this.addEventListenersOnListOfUsers();\n            })\n        }\n        else {\n            this.profilePage.profilePage(username!);\n        }\n    }\n    addEventListenersOnListOfUsers() {\n        const listOfAllUsers: NodeListOf<HTMLLIElement> = document.querySelectorAll('#listOfAllUsers li')!;\n        listOfAllUsers.forEach((user) => {\n            user.addEventListener('click', () => { this.goToHomeOrProfile(false, user.innerText); })\n        });\n    }\n}\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$14f6629ccf7de9b8$export$447fa9cb0c946c58","constructor","async","response","fetch","json","userObj","index","url","init","method","body","stringify","headers","post","timestamp","postId","$347f9556e8906125$exports","URL","resolve","toString","$62ef81368b1935d6$exports","$b537e53f9c4271b0$exports","$57540b7d61038bb5$export$d8bdd9c139c695f7","createUserContainer","document","getElementById","loginContainer","homePageContainer","profilePageContainer","displayProfilePicture","profilePicture","switchToCreateUser","querySelector","switchToLogin","this","addEventListener","createUser","createLogin","style","display","createHomePage","createProfilePage","userProfilePicture","imgUrl","homePageOrProfilePage","profilePictureUrl","src","href","returnPictureUrl","$99631b5f5dacb4bd$export$36d69433c4f81145","gui","firebase","allUsersPosts","innerHTML","getAllUsers","forEach","storedUser","username","localStorage","getItem","innerText","userForTheList","createElement","append","clear","window","location","confirm","arrayOfAllUsers","deleteUserFromFirebase","splice","CreateUser","event","preventDefault","statusUpdateText","value","statusUpdate","then","allUsers","currentUser","find","undefined","userIndex","indexOf","Date","toLocaleString","updateUserPosts","allPosts","posts","values","postWithTimestamp","picture","p","t","push","sort","a","b","getTime","storedPost","pictureSrc","timestampForThePost","postContainer","$dcfc905fcb023f39$export$120c0e7b1bef3ec7","arrayOfPostIDs","arrayOfIndexesForPosts","indexForThePost","key","noStatusUpdate","reverse","statusContainer","statusUsername","statusText","statusTimestamp","deletePostBtn","postIndex","deleteUserPost","profilePage","$ad2bcec7a0192558$var$user","homePage","goToHomeOrProfile","createUsername","createPassword","verifyPassword","selectPicture","user","password","firebaseArray","indexForUser","setItem","alert","checkIfUserExists","checkUser","trueOrFalse","addEventListenersOnListOfUsers","querySelectorAll","$ad2bcec7a0192558$var$homePage","logIn","console","log","addPost","deleteUser"],"version":3,"file":"index.f13b18dd.js.map"}